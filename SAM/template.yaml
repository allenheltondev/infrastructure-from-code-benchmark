AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Chicken Auction - Baseline

Parameters:
  TableName:
    Type: String
    Default: chicken-auction
  GSI1:
    Type: String
    Default: GSI1
  
Globals:
  Function:
    Runtime: nodejs16.x
    Architectures:
      - arm64
    Tracing: Active
    Timeout: 3
    Handler: index.handler
    Layers:
      - !Ref DependencyLayer
    Environment:
      Variables:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  Api:
    Cors:
      AllowMethods: "'GET,POST'"
      AllowHeaders: "'Content-Type,x-api-key'"
      AllowOrigin: "'*'"

Resources:
  DependencyLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: nodejs16.x
    Properties:
      LayerName: chicken-auction-dependency-layer
      ContentUri: layers/
      CompatibleRuntimes:
        - nodejs16.x

  ChickenAuctionApi:
    Type: AWS::Serverless::Api
    Properties:
      TracingEnabled: false
      StageName: dev
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./openapi.yaml

  ChickenAuctionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TableName
      BillingMode: PAY_PER_REQUEST      
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: GSI1PK
          AttributeType: S
        - AttributeName: GSI1SK
          AttributeType: S        
      GlobalSecondaryIndexes:
        - IndexName: !Ref GSI1
          KeySchema:
            - AttributeName: GSI1PK
              KeyType: HASH
            - AttributeName: GSI1SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL        

  CreateAuctionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create-auction
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
              Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Events:
        AddAuctionEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ChickenAuctionApi
            Path: /auctions
            Method: POST

  CreateChickenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create-chicken
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}
            - Effect: Allow
              Action:
                - sns:CreateTopic
              Resource: '*'
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Events:
        CreateChickenEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ChickenAuctionApi
            Path: /chickens
            Method: POST

  SubscribeForAlertsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/subscribe-for-alerts
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}
            - Effect: Allow
              Action:
                - sns:Subscribe
              Resource: '*'
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Events:
        SubscribeEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ChickenAuctionApi
            Path: /chickens/{chickenId}/alerts
            Method: POST

  UpdateAuctionStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/update-auction-status
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Events:
        UpdateAuctionStatusEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ChickenAuctionApi
            Path: /auctions/{auctionId}/statuses
            Method: POST

  BidQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      ContentBasedDeduplication: true
      DeduplicationScope: messageGroup
      FifoThroughputLimit: perMessageGroupId

  ProcessBidFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/process-bid
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Events:
        BidMadeEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt BidQueue.Arn
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 600
        MaximumRetryAttempts: 0
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt ProcessBidDLQ.Arn

  ProcessBidDLQ:
    Type: AWS::SQS::Queue

  AddChickenRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: AddChickenPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}

  GetAllChickensRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: GetChickensPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Query
                Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}/index/${GSI1}

  GetAllAuctionsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: GetAuctionsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Query
                Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}/index/${GSI1}

  GetAuctionDetailsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: GetAuctionDetailsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}

  AddBidRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: AddBidPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource: !GetAtt BidQueue.Arn

  GetChickenDetailsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: GetChickenDetailsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}